CREATE OR ALTER PROCEDURE bronze.load_bronze AS
BEGIN
	DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME, @batch_end_time DATETIME;
	BEGIN TRY
		SET @batch_start_time = getdate();
		PRINT '==============================================================';
		PRINT 'Loading Bronze Layer';
		PRINT '==============================================================';

		PRINT '--------------------------------------------------------------';
		PRINT 'Loading CRM Tables';
		PRINT '--------------------------------------------------------------';

--------------------------------------------LOADING CRM FILES--------------------------------------------------------------------
--- File 1.1

	-- TRUNCATE TABLE: Deze statement leegt de tabel om te zorgen dat de nieuwe data niet met oude data wordt vermengd.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table:bronze.crm_cust_info';
		TRUNCATE TABLE bronze.crm_cust_info;

	-- BULK INSERT: Laadt data van een lokaal CSV-bestand in de tabel.
		PRINT '>>Inserting Data Into: bronze.crm_cust_info';
		BULK INSERT bronze.crm_cust_info
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
		WITH (
	-- FIRSTROW: Start met laden vanaf de tweede rij om de header over te slaan.
			FIRSTROW = 2,
			-- FIELDTERMINATOR: Gebruikt een komma als scheidingsteken tussen kolommen.
			FIELDTERMINATOR = ',',
			TABLOCK
		);
		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';

--- File 1.2

	-- TRUNCATE: Maakt de tabel leeg voor de nieuwe load.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table:bronze.crm_prd_info';
		TRUNCATE TABLE bronze.crm_prd_info;

	-- BULK INSERT: Laadt data uit prd_info.csv.
		PRINT '>>Inserting Data Into: bronze.crm_prd_info';
		BULK INSERT bronze.crm_prd_info
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',
			TABLOCK
		);
		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';

--- File 1.3

	-- TRUNCATE: Maakt de tabel leeg voor de nieuwe load.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table:bronze.crm_sales_details';
		TRUNCATE TABLE bronze.crm_sales_details;

	-- BULK INSERT: Laadt data uit sales_details.csv.
		PRINT '>>Inserting Data Into: bronze.crm_sales_details';
		BULK INSERT bronze.crm_sales_details
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',
			TABLOCK
		);
		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';
--------------------------------------------------------END------------------------------------------------------------------------

------------------------------------------------LOADING ERP FILES------------------------------------------------------------------


		PRINT '--------------------------------------------------------------';
		PRINT 'Loading ERP Tables';
		PRINT '--------------------------------------------------------------';


--- File 2.1

	-- TRUNCATE: Maakt de tabel leeg voor de nieuwe load.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table: bronze.erp_loc_a101';
		TRUNCATE TABLE bronze.erp_loc_a101;

	-- BULK INSERT: Laadt data uit LOC_A101.csv.
		PRINT '>>Inserting Data Into: bronze.erp_loc_a101';
		BULK INSERT bronze.erp_loc_a101
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\LOC_A101.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',
			TABLOCK
		);
		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';

--- File 2.2

	-- TRUNCATE: Maakt de tabel leeg voor de nieuwe load.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table: bronze.erp_cust_az12';
		TRUNCATE TABLE bronze.erp_cust_az12;

	-- BULK INSERT: Laadt data uit CUST_AZ12.csv.
		PRINT '>>Inserting Data Into: bronze.erp_cust_az12';
		BULK INSERT bronze.erp_cust_az12
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\CUST_AZ12.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',
			TABLOCK
		);
		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';

--- File 2.3

	-- TRUNCATE: Maakt de tabel leeg voor de nieuwe load.
		SET @start_time = GETDATE ();
		PRINT '>>Truncating Table: bronze.erp_px_cat_g1v2';
		TRUNCATE TABLE bronze.erp_px_cat_g1v2;

	-- BULK INSERT: Laadt data uit PX_CAT_G1V2.csv.
		PRINT '>>Inserting Data Into: bronze.erp_px_cat_g1v2';
		BULK INSERT bronze.erp_px_cat_g1v2
		FROM 'C:\Users\niels\Downloads\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\PX_CAT_G1V2.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',
			TABLOCK
		);

--------------------------------------------------------END BULK LOAD--------------------------------------------------------------

		SET @end_time = GETDATE ();
		PRINT '>> Load Duration: ' + CAST(DATEDIFF (second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
		PRINT '---------------';

		SET @batch_end_time = getdate();
		PRINT'Loading Bronze Layer is Completed';
		PRINT '>> Total Load Duration: ' + CAST(DATEDIFF (second, @batch_start_time, @batch_end_time) AS NVARCHAR) + ' seconds';
		PRINT'==========================================';
	END TRY

	BEGIN CATCH
		PRINT'==========================================';
		PRINT'ERROR OCCURED DURING LOADING BRONZE LATER';
		PRINT'Error Message' + ERROR_MESSAGE();
		PRINT'Error Message' + CAST (ERROR_NUMBER() AS NVARCHAR);
		PRINT'Error Message' + CAST (ERROR_STATE() AS NVARCHAR);
		PRINT'=========================================='
	END CATCH
END
